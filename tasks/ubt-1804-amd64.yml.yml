---
# Title: role-postfix-relay-server
#
# Author: bitfinity-nl
# File: tasks/ubt-1804-make-ssl-cert.yml
#
# Description:
#   Send mail via 587 or 465
#
#  testsaslauthd -u administrator -p <password>
#

- name: "Install packages"
  apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - debconf-utils
      - libsasl2-modules
      - postfix
      - python-openssl
      - sasl2-bin

- name: Ensure directory exists for local self-signed TLS certs.
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /opt/ansible/ssl/selfsigned/live/{{ ansible_hostname }}
    - /etc/postfix/sasl

- name: Generate an OpenSSL private key.
  openssl_privatekey:
    path: /opt/ansible/ssl/selfsigned/live/{{ ansible_hostname }}/privkey.pem

- name: Generate an OpenSSL CSR.
  openssl_csr:
    path: /etc/ssl/private/{{ ansible_hostname }}.csr
    privatekey_path: /opt/ansible/ssl/selfsigned/live/{{ ansible_hostname }}/privkey.pem
    common_name: "{{ ansible_hostname }}"

- name: Generate a Self Signed OpenSSL certificate.
  openssl_certificate:
    path: /opt/ansible/ssl/selfsigned/live/{{ ansible_hostname }}/fullchain.pem
    privatekey_path: /opt/ansible/ssl/selfsigned/live/{{ ansible_hostname }}/privkey.pem
    csr_path: /etc/ssl/private/{{ ansible_hostname }}.csr
    provider: selfsigned

- name: "Transfer templates"
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"    
    mode: "{{ item.mode }}"
    backup: yes
  with_items:
    - { src: 'sasl2authd/saslauthd.j2', dest: '/etc/default/saslauthd', owner: 'root', group: 'root', mode: '0644', 
        desc: 'This file sets the SASL auth daemon (saslauthd) up to use LDAP authentication' }
    - { src: 'sasl2authd/saslauthd.conf.j2', dest: '/etc/saslauthd.conf', owner: 'root', group: 'root', mode: '0644',
        desc: 'This file configures the actual LDAP connection' }
    - { src: 'postfix/smtpd.conf.j2', dest: '/etc/postfix/sasl/smtpd.conf', owner: 'root', group: 'root', mode: '0644', 
        desc: 'Setup Postfix to use saslauthd as authentication mechanism.' }
    - { src: 'postfix/main.cf.j2', dest: '/etc/postfix/main.cf', owner: 'root', group: 'root', mode: '0644',
        desc: 'Configure postfix' }
  notify:
    - restart_saslauthd
    - restart_postfix

- name: "Enable encryption on port 587 (submission, STARTTLS) and 465 (SSL)"
  blockinfile:
    path: /etc/postfix/master.cf
    marker: "# <!-- {mark} ANSIBLE MANAGED BLOCK -->"
    insertafter: "#submission inet n.*"
    block: |
      submission inet n       -       -       -       -       smtpd
        -o smtpd_enforce_tls=yes
        -o smtpd_sasl_auth_enable=yes
        -o smtpd_client_restrictions=permit_sasl_authenticated,reject
      smtps     inet  n       -       -       -       -       smtpd
        -o smtpd_tls_wrappermode=yes
        -o smtpd_sasl_auth_enable=yes
        -o smtpd_client_restrictions=permit_sasl_authenticated,reject
  notify:
    - restart_postfix

- name: "Ensure spool direcoty exists /var/spool/postfix/var/run/saslauthd"
  file:
    path: /var/spool/postfix/var/run/saslauthd
    owner: root
    group: sasl
    mode: 0710
    state: directory

- name: "Remove directory /var/run/saslauthd"
  file:
    path: /var/run/saslauthd
    state: absent

- name: "start saslauthd"
  systemd:
    name: saslauthd
    state: started

- name: "Create symlink from /var/spool/postfix/var/run/saslauthd to /var/run/saslauthd"
  file:
    src: /var/spool/postfix/var/run/saslauthd
    dest: /var/run/saslauthd
    state: link

- name: "Add user postfix to sasl group, to be able to access the saslauthd communication socket"
  user:
    name: postfix
    groups: sasl
    append: yes



- name: "Enable to relayhost"
  blockinfile:
    path: /etc/postfix/main.cf
    marker: "# <!-- {mark} ANSIBLE MANAGED BLOCK -->"
    block: |
      relayhost = {{ pf_relayhost }}
    backup: yes
    state: present
  when:
    - pf_relay_state == 'enabled'
  notify:
    - restart_postfix

- name: "Disable to relayhost"
  blockinfile:
    path: /etc/postfix/main.cf
    marker: "# <!-- {mark} ANSIBLE MANAGED BLOCK -->"
    block: |
      relayhost = {{ pf_relayhost }}
    backup: yes
    state: absent
  when:
    - pf_relay_state == 'disabled'
  notify:
    - restart_postfix

- name: "Configure UFW for postfix"
  ufw:
    rule: allow
    name: Postfix
    delete: yes


        